version: '3.3'
services:
  collect.mongo:  
    container_name: collect.mongo
    image: mongo:4.2
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
    networks: 
      dehia:
      backend:
        aliases:
          - collect.mongo
    command: mongod --auth --bind_ip 0.0.0.0
    volumes:
      - ./docker/mongo/init.sh:/docker-entrypoint-initdb.d/init-mongo.sh

  collect.php:
    container_name: collect.php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    depends_on: 
      - collect.mongo
    environment: 
        WAIT_HOSTS: collect.mongo:27017
        WAIT_SLEEP_INTERVAL: 5
        WAIT_BEFORE_HOSTS: 5
        WAIT_TIMEOUT: 350
    restart: on-failure
    user: ${LOCAL_USER}
    networks: 
      dehia:
      backend:
        aliases:
          - collect.php

  collect.nginx:
    container_name: collect.nginx
    image: nginx:1.15.3-alpine
    restart: on-failure
    depends_on:
      - collect.php
    networks:
      backend:
      dehia:
        aliases:
          - collect.nginx

  collect.mongo-express:
    container_name: collect.mongo-express
    image: mongo-express:0.54
    restart: on-failure
    depends_on: 
      - collect.mongo
    environment: 
      ME_CONFIG_MONGODB_SERVER: collect.mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    networks:
      - backend

networks:
  dehia:
    external: true
  backend:
    external: false